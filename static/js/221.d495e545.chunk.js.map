{"version":3,"file":"static/js/221.d495e545.chunk.js","mappings":"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","sources":["components/Movies.jsx","services/api.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { searchMovies } from '../services/api';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSearch = async () => {\n    try {\n      const response = await searchMovies(searchQuery);\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies', error);\n    }\n  };\n\n  const handleMovieClick = (movieId) => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <input type=\"text\" value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id} onClick={() => handleMovieClick(movie.id)}>\n            {movie.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '328830ad39afbbc4f4fea7244342fed5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/get-trending');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n    const response = await api.get('/search/search-movies', { params: { query } });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await api.get(`/movies/get-movie-details/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details', error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await api.get(`/movies/get-movie-credits/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await api.get(`/movies/get-movie-reviews/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews', error);\n    throw error;\n  }\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","navigate","useNavigate","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","searchMovies","sent","data","results","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","map","movie","movieId","id","concat","title","api","axios","baseURL","params","api_key","getTrendingMovies","get","abrupt","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}